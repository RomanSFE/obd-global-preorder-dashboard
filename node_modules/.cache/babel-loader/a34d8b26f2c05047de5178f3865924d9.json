{"ast":null,"code":"var _jsxFileName = \"/mnt/e/Orponbd Office Work/React Projects/obd-global-preorder-dashboard/src/components/dashboard/products/ImageUploadCompo.js\";\nimport React, { Component } from \"react\"; // import UploadService from \"./file-upload.service\";\n\nexport default class ImageUploadCompo extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFiles = this.selectFiles.bind(this);\n    this.upload = this.upload.bind(this);\n    this.uploadImages = this.uploadImages.bind(this);\n    this.state = {\n      selectedFiles: undefined,\n      previewImages: [],\n      progressInfos: [],\n      message: [],\n      imageInfos: []\n    };\n  }\n\n  componentDidMount() {\n    // UploadService.getFiles().then((response) => {\n    this.setState({\n      imageInfos: response.data\n    }); // });\n  }\n\n  selectFiles(event) {\n    let images = [];\n\n    for (let i = 0; i < event.target.files.length; i++) {\n      images.push(URL.createObjectURL(event.target.files[i]));\n    }\n\n    this.setState({\n      progressInfos: [],\n      message: [],\n      selectedFiles: event.target.files,\n      previewImages: images\n    });\n  }\n\n  upload(idx, file) {\n    let _progressInfos = [...this.state.progressInfos];\n    UploadService.upload(file, event => {\n      _progressInfos[idx].percentage = Math.round(100 * event.loaded / event.total);\n      this.setState({\n        progressInfos: _progressInfos\n      });\n    }).then(() => {\n      this.setState(prev => {\n        let nextMessage = [...prev.message, \"Uploaded the image successfully: \" + file.name];\n        return {\n          message: nextMessage\n        };\n      });\n      return UploadService.getFiles();\n    }).then(files => {\n      this.setState({\n        imageInfos: files.data\n      });\n    }).catch(() => {\n      _progressInfos[idx].percentage = 0;\n      this.setState(prev => {\n        let nextMessage = [...prev.message, \"Could not upload the image: \" + file.name];\n        return {\n          progressInfos: _progressInfos,\n          message: nextMessage\n        };\n      });\n    });\n  }\n\n  uploadImages() {\n    const selectedFiles = this.state.selectedFiles;\n    let _progressInfos = [];\n\n    for (let i = 0; i < selectedFiles.length; i++) {\n      _progressInfos.push({\n        percentage: 0,\n        fileName: selectedFiles[i].name\n      });\n    }\n\n    this.setState({\n      progressInfos: _progressInfos,\n      message: []\n    }, () => {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        this.upload(i, selectedFiles[i]);\n      }\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      previewImages,\n      progressInfos,\n      message,\n      imageInfos\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"btn btn-default p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      multiple: true,\n      accept: \"image/*\",\n      onChange: this.selectFiles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success btn-sm\",\n      disabled: !selectedFiles,\n      onClick: this.uploadImages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Upload\"))), progressInfos && progressInfos.map((progressInfo, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, progressInfo.fileName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar progress-bar-info\",\n      role: \"progressbar\",\n      \"aria-valuenow\": progressInfo.percentage,\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      style: {\n        width: progressInfo.percentage + \"%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, progressInfo.percentage, \"%\")))), previewImages && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, previewImages.map((img, i) => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        className: \"preview\",\n        src: img,\n        alt: \"image-\" + i,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      });\n    })), message.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-secondary mt-2\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, message.map((item, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 24\n        }\n      }, item);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, \"List of Files\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, imageInfos && imageInfos.map((img, index) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: img.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, img.name)), /*#__PURE__*/React.createElement(\"img\", {\n      src: img.url,\n      alt: img.name,\n      height: \"80px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/mnt/e/Orponbd Office Work/React Projects/obd-global-preorder-dashboard/src/components/dashboard/products/ImageUploadCompo.js"],"names":["React","Component","ImageUploadCompo","constructor","props","selectFiles","bind","upload","uploadImages","state","selectedFiles","undefined","previewImages","progressInfos","message","imageInfos","componentDidMount","setState","response","data","event","images","i","target","files","length","push","URL","createObjectURL","idx","file","_progressInfos","UploadService","percentage","Math","round","loaded","total","then","prev","nextMessage","name","getFiles","catch","fileName","render","map","progressInfo","index","width","img","item","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAEA,eAAe,MAAMC,gBAAN,SAA+BD,SAA/B,CAAyC;AACtDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKG,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAEC,SADJ;AAEXC,MAAAA,aAAa,EAAE,EAFJ;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAMXC,MAAAA,UAAU,EAAE;AAND,KAAb;AAQD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACE,SAAKC,QAAL,CAAc;AACZF,MAAAA,UAAU,EAAEG,QAAQ,CAACC;AADT,KAAd,EAFgB,CAKlB;AACD;;AAEDd,EAAAA,WAAW,CAACe,KAAD,EAAQ;AACjB,QAAIC,MAAM,GAAG,EAAb;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,MAAvC,EAA+CH,CAAC,EAAhD,EAAoD;AAClDD,MAAAA,MAAM,CAACK,IAAP,CAAYC,GAAG,CAACC,eAAJ,CAAoBR,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBF,CAAnB,CAApB,CAAZ;AACD;;AAED,SAAKL,QAAL,CAAc;AACZJ,MAAAA,aAAa,EAAE,EADH;AAEZC,MAAAA,OAAO,EAAE,EAFG;AAGZJ,MAAAA,aAAa,EAAEU,KAAK,CAACG,MAAN,CAAaC,KAHhB;AAIZZ,MAAAA,aAAa,EAAES;AAJH,KAAd;AAMD;;AAEDd,EAAAA,MAAM,CAACsB,GAAD,EAAMC,IAAN,EAAY;AAChB,QAAIC,cAAc,GAAG,CAAC,GAAG,KAAKtB,KAAL,CAAWI,aAAf,CAArB;AAEAmB,IAAAA,aAAa,CAACzB,MAAd,CAAqBuB,IAArB,EAA4BV,KAAD,IAAW;AACpCW,MAAAA,cAAc,CAACF,GAAD,CAAd,CAAoBI,UAApB,GAAiCC,IAAI,CAACC,KAAL,CAC9B,MAAMf,KAAK,CAACgB,MAAb,GAAuBhB,KAAK,CAACiB,KADE,CAAjC;AAGA,WAAKpB,QAAL,CAAc;AACZJ,QAAAA,aAAa,EAAEkB;AADH,OAAd;AAGD,KAPD,EAQGO,IARH,CAQQ,MAAM;AACV,WAAKrB,QAAL,CAAesB,IAAD,IAAU;AACtB,YAAIC,WAAW,GAAG,CAChB,GAAGD,IAAI,CAACzB,OADQ,EAEhB,sCAAsCgB,IAAI,CAACW,IAF3B,CAAlB;AAIA,eAAO;AACL3B,UAAAA,OAAO,EAAE0B;AADJ,SAAP;AAGD,OARD;AAUA,aAAOR,aAAa,CAACU,QAAd,EAAP;AACD,KApBH,EAqBGJ,IArBH,CAqBSd,KAAD,IAAW;AACf,WAAKP,QAAL,CAAc;AACZF,QAAAA,UAAU,EAAES,KAAK,CAACL;AADN,OAAd;AAGD,KAzBH,EA0BGwB,KA1BH,CA0BS,MAAM;AACXZ,MAAAA,cAAc,CAACF,GAAD,CAAd,CAAoBI,UAApB,GAAiC,CAAjC;AACA,WAAKhB,QAAL,CAAesB,IAAD,IAAU;AACtB,YAAIC,WAAW,GAAG,CAChB,GAAGD,IAAI,CAACzB,OADQ,EAEhB,iCAAiCgB,IAAI,CAACW,IAFtB,CAAlB;AAIA,eAAO;AACL5B,UAAAA,aAAa,EAAEkB,cADV;AAELjB,UAAAA,OAAO,EAAE0B;AAFJ,SAAP;AAID,OATD;AAUD,KAtCH;AAuCD;;AAEDhC,EAAAA,YAAY,GAAG;AACb,UAAME,aAAa,GAAG,KAAKD,KAAL,CAAWC,aAAjC;AAEA,QAAIqB,cAAc,GAAG,EAArB;;AAEA,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,aAAa,CAACe,MAAlC,EAA0CH,CAAC,EAA3C,EAA+C;AAC7CS,MAAAA,cAAc,CAACL,IAAf,CAAoB;AAAEO,QAAAA,UAAU,EAAE,CAAd;AAAiBW,QAAAA,QAAQ,EAAElC,aAAa,CAACY,CAAD,CAAb,CAAiBmB;AAA5C,OAApB;AACD;;AAED,SAAKxB,QAAL,CACE;AACEJ,MAAAA,aAAa,EAAEkB,cADjB;AAEEjB,MAAAA,OAAO,EAAE;AAFX,KADF,EAKE,MAAM;AACJ,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,aAAa,CAACe,MAAlC,EAA0CH,CAAC,EAA3C,EAA+C;AAC7C,aAAKf,MAAL,CAAYe,CAAZ,EAAeZ,aAAa,CAACY,CAAD,CAA5B;AACD;AACF,KATH;AAWD;;AAEDuB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJnC,MAAAA,aADI;AAEJE,MAAAA,aAFI;AAGJC,MAAAA,aAHI;AAIJC,MAAAA,OAJI;AAKJC,MAAAA;AALI,QAMF,KAAKN,KANT;AAQA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,MAAM,EAAC,SAHT;AAIE,MAAA,QAAQ,EAAE,KAAKJ,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,eAYE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,QAAQ,EAAE,CAACK,aAFb;AAGE,MAAA,OAAO,EAAE,KAAKF,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAZF,CADF,EAwBGK,aAAa,IACZA,aAAa,CAACiC,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,kBAChB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,YAAY,CAACH,QAApB,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,gCADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAeG,YAAY,CAACd,UAH9B;AAIE,uBAAc,GAJhB;AAKE,uBAAc,KALhB;AAME,MAAA,KAAK,EAAE;AAAEgB,QAAAA,KAAK,EAAEF,YAAY,CAACd,UAAb,GAA0B;AAAnC,OANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGc,YAAY,CAACd,UARhB,MADF,CAFF,CADF,CAzBJ,EA2CGrB,aAAa,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,aAAa,CAACkC,GAAd,CAAkB,CAACI,GAAD,EAAM5B,CAAN,KAAY;AAC7B,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,GAAG,EAAE4B,GAA9B;AAAmC,QAAA,GAAG,EAAE,WAAW5B,CAAnD;AAAsD,QAAA,GAAG,EAAEA,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJA,CADH,CA5CJ,EAqDGR,OAAO,CAACW,MAAR,GAAiB,CAAjB,iBACC;AAAK,MAAA,SAAS,EAAC,4BAAf;AAA4C,MAAA,IAAI,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,OAAO,CAACgC,GAAR,CAAY,CAACK,IAAD,EAAO7B,CAAP,KAAa;AACxB,0BAAO;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa6B,IAAb,CAAP;AACD,KAFA,CADH,CADF,CAtDJ,eA+DE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpC,UAAU,IACTA,UAAU,CAAC+B,GAAX,CAAe,CAACI,GAAD,EAAMF,KAAN,kBACb;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAEA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,IAAI,EAAEE,GAAG,CAACE,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBF,GAAG,CAACT,IAAvB,CADF,CADF,eAIE;AAAK,MAAA,GAAG,EAAES,GAAG,CAACE,GAAd;AAAmB,MAAA,GAAG,EAAEF,GAAG,CAACT,IAA5B;AAAkC,MAAA,MAAM,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CAFJ,CAFF,CA/DF,CADF;AAgFD;;AAnMqD","sourcesContent":["import React, { Component } from \"react\";\r\n// import UploadService from \"./file-upload.service\";\r\n\r\nexport default class ImageUploadCompo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectFiles = this.selectFiles.bind(this);\r\n    this.upload = this.upload.bind(this);\r\n    this.uploadImages = this.uploadImages.bind(this);\r\n\r\n    this.state = {\r\n      selectedFiles: undefined,\r\n      previewImages: [],\r\n      progressInfos: [],\r\n      message: [],\r\n\r\n      imageInfos: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // UploadService.getFiles().then((response) => {\r\n      this.setState({\r\n        imageInfos: response.data\r\n      });\r\n    // });\r\n  }\r\n\r\n  selectFiles(event) {\r\n    let images = [];\r\n\r\n    for (let i = 0; i < event.target.files.length; i++) {\r\n      images.push(URL.createObjectURL(event.target.files[i]));\r\n    }\r\n\r\n    this.setState({\r\n      progressInfos: [],\r\n      message: [],\r\n      selectedFiles: event.target.files,\r\n      previewImages: images\r\n    });\r\n  }\r\n\r\n  upload(idx, file) {\r\n    let _progressInfos = [...this.state.progressInfos];\r\n\r\n    UploadService.upload(file, (event) => {\r\n      _progressInfos[idx].percentage = Math.round(\r\n        (100 * event.loaded) / event.total\r\n      );\r\n      this.setState({\r\n        progressInfos: _progressInfos\r\n      });\r\n    })\r\n      .then(() => {\r\n        this.setState((prev) => {\r\n          let nextMessage = [\r\n            ...prev.message,\r\n            \"Uploaded the image successfully: \" + file.name\r\n          ];\r\n          return {\r\n            message: nextMessage\r\n          };\r\n        });\r\n\r\n        return UploadService.getFiles();\r\n      })\r\n      .then((files) => {\r\n        this.setState({\r\n          imageInfos: files.data\r\n        });\r\n      })\r\n      .catch(() => {\r\n        _progressInfos[idx].percentage = 0;\r\n        this.setState((prev) => {\r\n          let nextMessage = [\r\n            ...prev.message,\r\n            \"Could not upload the image: \" + file.name\r\n          ];\r\n          return {\r\n            progressInfos: _progressInfos,\r\n            message: nextMessage\r\n          };\r\n        });\r\n      });\r\n  }\r\n\r\n  uploadImages() {\r\n    const selectedFiles = this.state.selectedFiles;\r\n\r\n    let _progressInfos = [];\r\n\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      _progressInfos.push({ percentage: 0, fileName: selectedFiles[i].name });\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        progressInfos: _progressInfos,\r\n        message: []\r\n      },\r\n      () => {\r\n        for (let i = 0; i < selectedFiles.length; i++) {\r\n          this.upload(i, selectedFiles[i]);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedFiles,\r\n      previewImages,\r\n      progressInfos,\r\n      message,\r\n      imageInfos\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n            <label className=\"btn btn-default p-0\">\r\n              <input\r\n                type=\"file\"\r\n                multiple\r\n                accept=\"image/*\"\r\n                onChange={this.selectFiles}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"col-4\">\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              disabled={!selectedFiles}\r\n              onClick={this.uploadImages}\r\n            >\r\n              Upload\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {progressInfos &&\r\n          progressInfos.map((progressInfo, index) => (\r\n            <div className=\"mb-2\" key={index}>\r\n              <span>{progressInfo.fileName}</span>\r\n              <div className=\"progress\">\r\n                <div\r\n                  className=\"progress-bar progress-bar-info\"\r\n                  role=\"progressbar\"\r\n                  aria-valuenow={progressInfo.percentage}\r\n                  aria-valuemin=\"0\"\r\n                  aria-valuemax=\"100\"\r\n                  style={{ width: progressInfo.percentage + \"%\" }}\r\n                >\r\n                  {progressInfo.percentage}%\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n        {previewImages && (\r\n          <div>\r\n            {previewImages.map((img, i) => {\r\n              return (\r\n                <img className=\"preview\" src={img} alt={\"image-\" + i} key={i} />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n\r\n        {message.length > 0 && (\r\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\r\n            <ul>\r\n              {message.map((item, i) => {\r\n                return <li key={i}>{item}</li>;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"card mt-3\">\r\n          <div className=\"card-header\">List of Files</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {imageInfos &&\r\n              imageInfos.map((img, index) => (\r\n                <li className=\"list-group-item\" key={index}>\r\n                  <p>\r\n                    <a href={img.url}>{img.name}</a>\r\n                  </p>\r\n                  <img src={img.url} alt={img.name} height=\"80px\" />\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}